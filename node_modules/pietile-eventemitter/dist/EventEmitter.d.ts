export declare class EventEmitter<T extends {
    [K in keyof T]: (...args: any) => any;
}> {
    private handlers;
    on<K extends keyof T>(event: K, handler: T[K]): T[K];
    off<K extends keyof T>(event: K, handler: T[K]): void;
    offAll(): void;
    emit<K extends keyof T>(event: K, ...args: Parameters<T[K]>): void;
}
